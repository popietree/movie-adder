{"version":3,"sources":["components/AddMovie.module.css","components/Movie.module.css","components/MoviesList.module.css","components/Movie.js","components/MoviesList.js","components/AddMovie.js","App2.js","index.js"],"names":["module","exports","Movie","props","className","classes","movie","title","releaseDate","openingText","MovieList","movies","map","key","id","AddMovie","titleRef","useRef","openingTextRef","releaseDateRef","onSubmit","event","preventDefault","current","value","onAddMovie","control","htmlFor","type","ref","rows","App","useState","setMovies","isLoading","setIsLoading","error","setError","fetchMoviesHandler","useCallback","a","fetch","response","ok","Error","json","data","loadedMovies","push","console","log","message","method","body","JSON","stringify","headers","useEffect","content","length","MoviesList","Fragment","onClick","ReactDOM","render","App2","document","getElementById"],"mappings":"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","file":"static/js/main.235d6fc1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"control\":\"AddMovie_control__2ENNX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"movie\":\"Movie_movie__27rBX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"movies-list\":\"MoviesList_movies-list__lMnXQ\"};","import React from 'react';\n\nimport classes from './Movie.module.css';\n\nconst Movie = (props) => {\n  return (\n    <li className={classes.movie}>\n      <h2>{props.title}</h2>\n      <h3>{props.releaseDate}</h3>\n      <p>{props.openingText}</p>\n    </li>\n  );\n};\n\nexport default Movie;\n","import React from 'react';\n\nimport Movie from './Movie';\nimport classes from './MoviesList.module.css';\n\nconst MovieList = (props) => {\n  return (\n    <ul className={classes['movies-list']}>\n      {props.movies.map((movie) => (\n        <Movie\n          key={movie.id}\n          title={movie.title}\n          releaseDate={movie.releaseDate}\n          openingText={movie.openingText}\n        />\n      ))}\n    </ul>\n  );\n};\n\nexport default MovieList;\n","import React, { useRef } from 'react';\n\nimport classes from './AddMovie.module.css';\n\nfunction AddMovie(props) {\n  const titleRef = useRef('');\n  const openingTextRef = useRef('');\n  const releaseDateRef = useRef('');\n\n  function submitHandler(event) {\n    event.preventDefault();\n\n    // could add validation here...\n\n    const movie = {\n      title: titleRef.current.value,\n      openingText: openingTextRef.current.value,\n      releaseDate: releaseDateRef.current.value,\n    };\n\n    props.onAddMovie(movie);\n  }\n\n  return (\n    <form onSubmit={submitHandler}>\n      <div className={classes.control}>\n        <label htmlFor='title'>Title</label>\n        <input type='text' id='title' ref={titleRef} />\n      </div>\n      <div className={classes.control}>\n        <label htmlFor='opening-text'>Opening Text</label>\n        <textarea rows='5' id='opening-text' ref={openingTextRef}></textarea>\n      </div>\n      <div className={classes.control}>\n        <label htmlFor='date'>Release Date</label>\n        <input type='text' id='date' ref={releaseDateRef} />\n      </div>\n      <button>Add Movie</button>\n    </form>\n  );\n}\n\nexport default AddMovie;\n","import React, { useState, useEffect, useCallback } from \"react\";\n\nimport MoviesList from \"./components/MoviesList\";\nimport AddMovie from \"./components/AddMovie\";\nimport \"./App.css\";\n\nfunction App() {\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const fetchMoviesHandler = useCallback(async () => {\n    setIsLoading(true);\n    setError(null);\n    try {\n      const response = await fetch(\n        \"https://react-movie-50e2b-default-rtdb.firebaseio.com/movies.json\"\n      );\n      if (!response.ok) {\n        throw new Error(\"Something went wrong!\");\n      }\n\n      const data = await response.json();\n      const loadedMovies = [];\n\n      for (const key in data) {\n        loadedMovies.push({\n          id: key,\n          title: data[key].title,\n          openingText: data[key].openingText,\n          releaseDate: data[key].releaseDate,\n        });\n      }\n\n      console.log(data);\n\n      // const transformedMovies = data.results.map((movieData) => {\n      //   return {\n      //     id: movieData.episode_id,\n      //     title: movieData.title,\n      //     openingText: movieData.opening_crawl,\n      //     releaseDate: movieData.release_date,\n      //   };\n      // });\n      // setMovies(transformedMovies);\n      setMovies(loadedMovies);\n    } catch (error) {\n      setError(error.message);\n    }\n    setIsLoading(false);\n  }, []);\n\n  // can call once\n  useEffect(() => {\n    fetchMoviesHandler();\n  }, [fetchMoviesHandler]);\n\n  async function addMovieHandler(movie) {\n    try {\n      const response = await fetch(\n        \"https://react-movie-50e2b-default-rtdb.firebaseio.com/movies.json\",\n        {\n          method: \"POST\",\n          body: JSON.stringify(movie),\n          headers: { \"Content-Type\": \"application/json\" },\n        }\n      );\n      //GUARD CLAUSE FOR ERROR\n      if (!response.ok) {\n        throw new Error(\"Something went wrong\");\n      }\n      const data = await response.json();\n      console.log(data);\n    } catch (error) {\n      console.log(error.message);\n    }\n  }\n\n  let content = <p>Found no movies.</p>;\n\n  if (movies.length > 0) {\n    content = <MoviesList movies={movies} />;\n  }\n  //can also return\n  if (error) {\n    content = <p>{error}</p>;\n  }\n\n  if (isLoading) {\n    content = <p>Loading...</p>;\n  }\n\n  return (\n    <React.Fragment>\n      <section>\n        <AddMovie onAddMovie={addMovieHandler} />\n      </section>\n      <section>\n        <button onClick={fetchMoviesHandler}>Fetch Movies</button>\n      </section>\n      <section>{content}</section>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport \"./index.css\";\nimport App2 from \"./App2\";\n\nReactDOM.render(<App2 />, document.getElementById(\"root\"));\n"],"sourceRoot":""}